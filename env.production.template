# =================================
# DUMEE SAAS PLATFORM - PRODUCTION ENVIRONMENT TEMPLATE
# =================================
# Copy this file to .env and configure for your production environment
# SECURITY WARNING: Never commit .env files to version control!

# =================================
# APPLICATION SETTINGS
# =================================
NODE_ENV=production
APP_TITLE=Dumee
PORT=3080
HOST=0.0.0.0
DOMAIN_CLIENT=https://dum.ee
DOMAIN_SERVER=https://api.dum.ee

# =================================
# SECURITY & AUTHENTICATION
# =================================
# Generate secure random keys using: openssl rand -hex 32
JWT_SECRET=REPLACE_WITH_SECURE_32_CHAR_HEX_KEY
JWT_REFRESH_SECRET=REPLACE_WITH_SECURE_32_CHAR_HEX_KEY
JWT_REFRESH_EXPIRY=604800  # 7 days in seconds

# Encryption keys for sensitive data storage
# Generate using: openssl rand -hex 32 and openssl rand -hex 16
CREDS_KEY=REPLACE_WITH_SECURE_32_CHAR_HEX_KEY
CREDS_IV=REPLACE_WITH_SECURE_16_CHAR_HEX_IV

# Session configuration
SESSION_EXPIRY=86400  # 24 hours in seconds
REFRESH_TOKEN_EXPIRY=604800  # 7 days in seconds

# =================================
# DATABASE CONFIGURATION
# =================================
# MongoDB Production Connection
MONGO_URI=mongodb://username:password@your-mongodb-host:27017/dumee?authSource=admin&ssl=true

# Redis Configuration (for sessions, caching, rate limiting)
REDIS_URI=redis://username:password@your-redis-host:6379
REDIS_PASSWORD=your_redis_password
REDIS_KEY_PREFIX=dumee

# =================================
# SEARCH ENGINE
# =================================
# Meilisearch Configuration
MEILI_HOST=https://your-meilisearch-host
MEILI_MASTER_KEY=REPLACE_WITH_SECURE_MEILISEARCH_KEY

# =================================
# AI PROVIDER API KEYS
# =================================
# OpenAI Configuration
OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_MODELS=gpt-4,gpt-3.5-turbo,gpt-4-turbo

# Anthropic Configuration
ANTHROPIC_API_KEY=sk-ant-your_anthropic_key_here
ANTHROPIC_MODELS=claude-3-sonnet,claude-3-opus

# Google AI Configuration
GOOGLE_API_KEY=your_google_ai_key_here
GOOGLE_MODELS=gemini-pro,gemini-pro-vision

# Azure OpenAI Configuration
AZURE_OPENAI_API_KEY=your_azure_openai_key
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# AWS Bedrock Configuration
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1

# =================================
# FILE STORAGE CONFIGURATION
# =================================
# Storage Strategy: local, s3, azure, firebase
FILE_STRATEGY=s3

# AWS S3 Configuration (if using S3)
AWS_S3_BUCKET=dumee-files-production
AWS_S3_REGION=us-east-1
AWS_S3_ACCESS_KEY_ID=your_s3_access_key
AWS_S3_SECRET_ACCESS_KEY=your_s3_secret_key

# File Upload Limits
MAX_FILE_SIZE=20971520  # 20MB in bytes
MAX_FILES_PER_USER=100
TOTAL_FILE_SIZE_LIMIT=1073741824  # 1GB in bytes

# =================================
# SAAS BUSINESS FEATURES
# =================================
# Subscription management
ENABLE_SUBSCRIPTIONS=true
STRIPE_PUBLISHABLE_KEY=pk_live_your_stripe_publishable_key
STRIPE_SECRET_KEY=sk_live_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Usage tracking and limits
ENABLE_USAGE_TRACKING=true
FREE_TIER_MESSAGE_LIMIT=100
PRO_TIER_MESSAGE_LIMIT=1000
ENTERPRISE_TIER_MESSAGE_LIMIT=10000

# =================================
# RATE LIMITING & SECURITY
# =================================
# Rate limiting per user/IP
LIMIT_CONCURRENT_MESSAGES=true
LIMIT_MESSAGE_IP=100
LIMIT_MESSAGE_USER=50
LIMIT_WINDOW_MINUTES=60

# CORS configuration
CORS_ORIGIN=https://dum.ee,https://www.dum.ee
TRUST_PROXY=1

# Security headers
ENABLE_SECURITY_HEADERS=true
FORCE_SSL=true

# =================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =================================
# 1. Generate all keys using secure random generators
# 2. Use environment-specific databases (separate dev/staging/prod)
# 3. Enable SSL/TLS for all external connections
# 4. Configure proper backup strategies
# 5. Set up monitoring and alerting
# 6. Review and test disaster recovery procedures
# 7. Ensure compliance with data protection regulations
# 8. Regular security audits and dependency updates